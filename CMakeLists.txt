cmake_minimum_required (VERSION 3.0)
project (painter)

if (WIN32) 
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/windows/)
	if (MSVC)
            set ( CMAKE_CXX_FLAGS "-DOS_WINDOWS")
            set(QTDIR "C:\\Programs\\Qt\\5.11.1")
	else()
            set ( CMAKE_CXX_FLAGS "-DOS_LINUX -g -fPIC -Wunused-parameter -pipe -std=gnu++17 -frtti -Wall -Wextra -fexceptions -pthread -Wno-unused-function -Wno-unused-variable")
            set(QTDIR "./ext/mingw73_32")
	endif(MSVC)
else()
	set ( CMAKE_CXX_FLAGS "-DOS_LINUX -g -fPIC -Wunused-parameter -pipe -std=gnu++17 -frtti -Wall -Wextra -fexceptions -pthread -Wno-unused-function -Wno-unused-variable")
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/linux/)
endif (WIN32)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/.tmp/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/.tmp/lib)

set(CMAKE_AUTOMOC ON)
set(CMAKE_PREFIX_PATH ${QTDIR})
#set(CMAKE_CXX_STANDARD 17)

find_package (Qt5Widgets)
find_package (Qt5Core)
find_package (Qt5Gui)
#find_package (Qt5Svg)
#find_package (Qt5Xml)

if (UNIX)
    if (EXISTS "/usr/include/x86_64-linux-gnu/qt5/")
        set(QT_INCLUDE_DIR "/usr/include/x86_64-linux-gnu/qt5/")
    else()
        set(QT_INCLUDE_DIR "/usr/include/i386-linux-gnu/qt5/")
    endif()
else ()
    set(QT_INCLUDE_DIR ${QTDIR}/include)
endif (UNIX)

include_directories(${QT_INCLUDE_DIR}/)
include_directories(${QT_INCLUDE_DIR}/QtCore)
include_directories(${QT_INCLUDE_DIR}/QtGui)
include_directories(${QT_INCLUDE_DIR}/QtCore)
include_directories(${QT_INCLUDE_DIR}/QtWidgets)


add_subdirectory (${PROJECT_SOURCE_DIR}/src/io)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/core/rq)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/core)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/commands)
add_subdirectory (${PROJECT_SOURCE_DIR}/src/gui)

add_executable(painter ${PROJECT_SOURCE_DIR}/src/main.cpp )
add_dependencies(painter rq io core commands gui )
target_link_libraries (painter gui rq io core commands rq Qt5::Widgets Qt5::Core Qt5::Gui dl)
